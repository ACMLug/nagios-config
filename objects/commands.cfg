##########
# E-mail #
##########

# 'notify-host-by-email' command definition
define command{
	command_name	notify-host-by-email
	command_line	/usr/bin/printf "%b" " ***** Nagios *****\n\nNotification Type: $NOTIFICATIONTYPE$\nHost: $HOSTNAME$\nState: $HOSTSTATE$\nAddress: $HOSTADDRESS$\nInfo: $HOSTOUTPUT$\n\nDate/Time: $LONGDATETIME$\n" | /bin/mail -s "[sa] [`hostname -s`] $NOTIFICATIONTYPE$ Host Alert: $HOSTNAME$ is $HOSTSTATE$ **" $CONTACTEMAIL$
	}

# 'notify-service-by-email' command definition
define command{
	command_name	notify-service-by-email
	command_line	/usr/bin/printf "%b" " ***** Nagios *****\n\nNotification Type: $NOTIFICATIONTYPE$\n\nService: $SERVICEDESC$\nHost: $HOSTALIAS$\nAddress: $HOSTADDRESS$\nState: $SERVICESTATE$\n\nDate/Time: $LONGDATETIME$\n\nAdditional Info:\n\n$SERVICEOUTPUT$\n\n$LONGSERVICEOUTPUT$\n" | /bin/mail -s "[sa] [`hostname -s`] $NOTIFICATIONTYPE$ Service Alert: $HOSTALIAS$/$SERVICEDESC$ is $SERVICESTATE$ **" $CONTACTEMAIL$
	}

# IRC - host notifications
define command{
	command_name	notify-host-by-irc
	command_line	/usr/local/bin/ircsay "#nagios" "[`hostname -s`] $NOTIFICATIONTYPE$ Host Alert: $HOSTNAME$ ($HOSTADDRESS$) is $HOSTSTATE$: $HOSTOUTPUT$"
	}

# IRC - service notifications
define command{
	command_name	notify-service-by-irc
	command_line	/usr/local/bin/ircsay "#nagios" "[`hostname -s`] $NOTIFICATIONTYPE$ Service Alert: $SERVICEDESC$ for $HOSTNAME$ ($HOSTADDRESS$) is $SERVICESTATE$: $SERVICEOUTPUT$  $LONGSERVICEOUTPUT$"
	}

# 'notify-host-by-email' command definition
define command{
	command_name	notify-host-by-email
	command_line	/usr/bin/printf "%b" " ***** Nagios *****\n\nNotification Type: $NOTIFICATIONTYPE$\nHost: $HOSTNAME$\nState: $HOSTSTATE$\nAddress: $HOSTADDRESS$\nInfo: $HOSTOUTPUT$\n\nDate/Time: $LONGDATETIME$\n" | /bin/mail -S replyto="ca-admin@ncsa.illinois.edu" -s "[sa] [`hostname -s`] $NOTIFICATIONTYPE$ Host Alert: $HOSTNAME$ is $HOSTSTATE$ **" $CONTACTEMAIL$
	}

# 'notify-service-by-email' command definition
define command{
	command_name	notify-service-by-email
	command_line	/usr/bin/printf "%b" " ***** Nagios *****\n\nNotification Type: $NOTIFICATIONTYPE$\n\nService: $SERVICEDESC$\nHost: $HOSTALIAS$\nAddress: $HOSTADDRESS$\nState: $SERVICESTATE$\n\nDate/Time: $LONGDATETIME$\n\nAdditional Info:\n\n$SERVICEOUTPUT$\n\n$LONGSERVICEOUTPUT$\n" | /bin/mail -S replyto="ca-admin@ncsa.illinois.edu" -s "[sa] [`hostname -s`] $NOTIFICATIONTYPE$ Service Alert: $HOSTALIAS$/$SERVICEDESC$ is $SERVICESTATE$ **" $CONTACTEMAIL$
	}

# Pager for Myproxy people

define command{
	command_name	notify-myproxy-host-by-pager
	command_line	/usr/bin/printf "%b" "State: $HOSTSTATE$:$HOSTNAME$:$HOSTADDRESS$\nInfo: $HOSTOUTPUT$\n\nDate/Time: $LONGDATETIME$\n - END" | /bin/mail -r "nagios" -s "$NOTIFICATIONTYPE$" $CONTACTPAGER$
	}

define command{
	command_name	notify-myproxy-service-by-pager
	command_line	/usr/bin/printf "%b" "Host: $HOSTALIAS$:$HOSTADDRESS$\nService: $SERVICEDESC$\nState: $SERVICESTATE$\nDate/Time: $LONGDATETIME$\nInfo:\n$SERVICEOUTPUT$\n$LONGSERVICEOUTPUT$" | /bin/mail -r "nagios" -s "$NOTIFICATIONTYPE$" $CONTACTPAGER$
	}

################
# Nagios Graph #
################

define command {
  command_name process-service-perfdata-for-nagiosgraph
  command_line /usr/local/nagiosgraph/bin/insert.pl
}

##########
# Checks #
##########

# This command checks to see if a host is "alive" by pinging it
# The check must result in a 100% packet loss or 5 second (5000ms) round trip 
# average time to produce a critical error.
# Note: Five ICMP echo packets are sent (determined by the '-p 5' argument)

# 'check_ping' command definition
define command {
        command_name    check_ping
        command_line    $USER1$/check_ping -H $HOSTADDRESS$ -w 3000.0,80% -c 5000.0,100% -p 3
        }

# 'check_load' command definition
define command {
        command_name    check_load
        command_line    $USER1$/check_load -w $ARG1$ -c $ARG2$
        }

# 'check_disk' command definition
define command {
        command_name    check_disk
        command_line    $USER1$/check_disk -w $ARG1$ -c $ARG2$ $ARG3$
	} 

# 'check_ssh' command definition
define command {
        command_name    check_ssh
        command_line    $USER1$/check_ssh -4 -p 22 $HOSTADDRESS$
        }

# 'check_http' command definition
define command {
        command_name    check_http
        command_line    $USER1$/check_http -H $HOSTADDRESS$ -p $ARG1$ -e "HTTP/1.,DOCTYPE" $ARG2$
}

# 'check_https' command definition
define command {
        command_name    check_https
        command_line    $USER1$/check_http -H $HOSTADDRESS$ -S -p $ARG1$ -e "HTTP/1.,DOCTYPE" $ARG2$
}

# Use to report status
# 'check_nrpe' version command definition
define command {
        command_name    check_nrpe_version
        command_line    $USER1$/check_nrpe -H $HOSTADDRESS$
        }

# 'check_dns' command definition
define command {
        command_name    check_dns
        command_line    $USER1$/check_dns -H $HOSTADDRESS$ -w 0.5 -c 1
        }

# 'check_dns' command definition - Custom
define command {
        command_name    check_dns_custom
        command_line    $USER1$/check_dns -H $ARG1$ -w 0.5 -c 1
        }

# 'check_swap' command definition
define command {
        command_name    check_swap
        command_line    $USER1$/check_swap -w 50 -c 45
        }

# 'check_procs' command definition
define command {
        command_name    check_procs
        command_line    $USER1$/check_procs -w $ARG1$ -c $ARG2$
        }

# 'check_tcp' ports command definition
define command {
        command_name    check_tcp
        command_line    $USER1$/check_tcp -H $HOSTADDRESS$ -p $ARG1$ -w 2 -c 5
        }

# 'check_tcp' ports command definition
define command {
        command_name    check_tcp_manual
        command_line    $USER1$/check_tcp -H $ARG1$ -p $ARG2$ -w 2 -c 5
        }

##################
# Firewall Check #
##################

define command {
        command_name    check_firewall
        command_line    $USER1$/negate -t 3 -c OK -o CRITICAL '$USER1$/check_tcp -H $HOSTADDRESS$ -p 65000 -r ok -t 2'
        }

# All non-local plug-ins are executed by check_nrpe.
# $ARG1$ is the plug-in name specified in a service configuration e.g ``-c check_load''

define command {
 command_name check_nrpe
 command_line $USER1$/check_nrpe -H $HOSTADDRESS$ -t 120 -c $ARG1$
 }
